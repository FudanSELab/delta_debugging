k8s:
https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.9/#node-v1-core
https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.9/
https://kubernetes.io/docs/reference/
https://kubernetes.io/docs/reference/kubectl/overview/
https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands
https://kubernetes.io/docs/reference/kubectl/docker-cli-to-kubectl/

How to set up k8s api:
1.Use the following command in the master of the kubernetes cluster to get the address of api server:
    .echo $(kubectl config view | grep server | cut -f 2- -d ":" | tr -d " ")
2.Follow the steps to get the user token with all authority:
    .Create file admin-token.yaml, and input the following content:
        kind: ClusterRoleBinding
        apiVersion: rbac.authorization.k8s.io/v1beta1
        metadata:
          name: admin
          annotations:
            rbac.authorization.kubernetes.io/autoupdate: "true"
        roleRef:
          kind: ClusterRole
          name: cluster-admin
          apiGroup: rbac.authorization.k8s.io
        subjects:
        - kind: ServiceAccount
          name: admin
          namespace: kube-system
        ---
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: admin
          namespace: kube-system
          labels:
            kubernetes.io/cluster-service: "true"
            addonmanager.kubernetes.io/mode: Reconcile
    .Apply the admin-token.yaml:
        kubectl appy -f admin-token.yaml
    .Execute the following command and get the admin-token-???
        kubectl get secret -n kube-system|grep admin
    .Execute the following command to get the final token:
        kubectl describe secret admin-token-??? -n kube-system
3.Replace the APISERVER and TOKEN value in the apiserver/src/main/java/apiserver/util/Const.java

istio:
https://istio.io/docs/reference/api/
https://istio.io/docs/reference/commands/





